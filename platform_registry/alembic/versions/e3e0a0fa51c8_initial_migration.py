"""initial migration

Revision ID: e3e0a0fa51c8
Revises: 
Create Date: 2024-08-27 09:58:21.898519

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e3e0a0fa51c8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('entity_type',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_entity_type_id'), 'entity_type', ['id'], unique=True)
    op.create_index(op.f('ix_entity_type_name'), 'entity_type', ['name'], unique=False)
    op.create_table('platform',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_platform_id'), 'platform', ['id'], unique=True)
    op.create_index(op.f('ix_platform_name'), 'platform', ['name'], unique=True)
    op.create_table('regulatory_framework',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description_url', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_regulatory_framework_id'), 'regulatory_framework', ['id'], unique=True)
    op.create_index(op.f('ix_regulatory_framework_name'), 'regulatory_framework', ['name'], unique=False)
    op.create_table('role',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('is_registry_admin', sa.Boolean(), nullable=False),
    sa.Column('is_platform', sa.Boolean(), nullable=False),
    sa.Column('manage_users', sa.Boolean(), nullable=False),
    sa.Column('manage_roles', sa.Boolean(), nullable=False),
    sa.Column('manage_platforms', sa.Boolean(), nullable=False),
    sa.Column('manage_access_keys', sa.Boolean(), nullable=False),
    sa.Column('manage_regulatory_frameworks', sa.Boolean(), nullable=False),
    sa.Column('manage_projects', sa.Boolean(), nullable=False),
    sa.Column('manage_projects_membership', sa.Boolean(), nullable=False),
    sa.Column('manage_entities', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('is_registry_admin', 'is_platform', name='unique_role_config')
    )
    op.create_index(op.f('ix_role_id'), 'role', ['id'], unique=True)
    op.create_index(op.f('ix_role_name'), 'role', ['name'], unique=True)
    op.create_table('access_key',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=False),
    sa.Column('platform_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['platform_id'], ['platform.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_index(op.f('ix_access_key_id'), 'access_key', ['id'], unique=True)
    op.create_index(op.f('ix_access_key_name'), 'access_key', ['name'], unique=True)
    op.create_table('entity',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('entity_type_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['entity_type_id'], ['entity_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_entity_id'), 'entity', ['id'], unique=True)
    op.create_index(op.f('ix_entity_name'), 'entity', ['name'], unique=True)
    op.create_table('project',
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('owner_platform_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_platform_id'], ['platform.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_code'), 'project', ['code'], unique=True)
    op.create_index(op.f('ix_project_id'), 'project', ['id'], unique=True)
    op.create_index(op.f('ix_project_name'), 'project', ['name'], unique=False)
    op.create_table('user',
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('firstname', sa.String(), nullable=True),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('role_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('platform_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['platform_id'], ['platform.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_firstname'), 'user', ['firstname'], unique=False)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=True)
    op.create_index(op.f('ix_user_lastname'), 'user', ['lastname'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('platforms_shared_projects_rel',
    sa.Column('platform_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('project_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('write', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['platform_id'], ['platform.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_platforms_shared_projects_rel_id'), 'platforms_shared_projects_rel', ['id'], unique=True)
    op.create_index(op.f('ix_platforms_shared_projects_rel_platform_id'), 'platforms_shared_projects_rel', ['platform_id'], unique=False)
    op.create_index(op.f('ix_platforms_shared_projects_rel_project_id'), 'platforms_shared_projects_rel', ['project_id'], unique=False)
    op.create_table('project_membership_rel',
    sa.Column('entity_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('project_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('functional_role', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_membership_rel_id'), 'project_membership_rel', ['id'], unique=True)
    op.create_index(op.f('ix_project_membership_rel_project_id'), 'project_membership_rel', ['project_id'], unique=False)
    op.create_index(op.f('ix_project_membership_rel_user_id'), 'project_membership_rel', ['user_id'], unique=False)
    op.create_table('projects_regulatory_frameworks_rel',
    sa.Column('project_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('regulatory_framework_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['regulatory_framework_id'], ['regulatory_framework.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_regulatory_frameworks_rel_id'), 'projects_regulatory_frameworks_rel', ['id'], unique=True)
    op.create_index(op.f('ix_projects_regulatory_frameworks_rel_project_id'), 'projects_regulatory_frameworks_rel', ['project_id'], unique=False)
    op.create_index(op.f('ix_projects_regulatory_frameworks_rel_regulatory_framework_id'), 'projects_regulatory_frameworks_rel', ['regulatory_framework_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_projects_regulatory_frameworks_rel_regulatory_framework_id'), table_name='projects_regulatory_frameworks_rel')
    op.drop_index(op.f('ix_projects_regulatory_frameworks_rel_project_id'), table_name='projects_regulatory_frameworks_rel')
    op.drop_index(op.f('ix_projects_regulatory_frameworks_rel_id'), table_name='projects_regulatory_frameworks_rel')
    op.drop_table('projects_regulatory_frameworks_rel')
    op.drop_index(op.f('ix_project_membership_rel_user_id'), table_name='project_membership_rel')
    op.drop_index(op.f('ix_project_membership_rel_project_id'), table_name='project_membership_rel')
    op.drop_index(op.f('ix_project_membership_rel_id'), table_name='project_membership_rel')
    op.drop_table('project_membership_rel')
    op.drop_index(op.f('ix_platforms_shared_projects_rel_project_id'), table_name='platforms_shared_projects_rel')
    op.drop_index(op.f('ix_platforms_shared_projects_rel_platform_id'), table_name='platforms_shared_projects_rel')
    op.drop_index(op.f('ix_platforms_shared_projects_rel_id'), table_name='platforms_shared_projects_rel')
    op.drop_table('platforms_shared_projects_rel')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_lastname'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_firstname'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_project_name'), table_name='project')
    op.drop_index(op.f('ix_project_id'), table_name='project')
    op.drop_index(op.f('ix_project_code'), table_name='project')
    op.drop_table('project')
    op.drop_index(op.f('ix_entity_name'), table_name='entity')
    op.drop_index(op.f('ix_entity_id'), table_name='entity')
    op.drop_table('entity')
    op.drop_index(op.f('ix_access_key_name'), table_name='access_key')
    op.drop_index(op.f('ix_access_key_id'), table_name='access_key')
    op.drop_table('access_key')
    op.drop_index(op.f('ix_role_name'), table_name='role')
    op.drop_index(op.f('ix_role_id'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_regulatory_framework_name'), table_name='regulatory_framework')
    op.drop_index(op.f('ix_regulatory_framework_id'), table_name='regulatory_framework')
    op.drop_table('regulatory_framework')
    op.drop_index(op.f('ix_platform_name'), table_name='platform')
    op.drop_index(op.f('ix_platform_id'), table_name='platform')
    op.drop_table('platform')
    op.drop_index(op.f('ix_entity_type_name'), table_name='entity_type')
    op.drop_index(op.f('ix_entity_type_id'), table_name='entity_type')
    op.drop_table('entity_type')
    # ### end Alembic commands ###
